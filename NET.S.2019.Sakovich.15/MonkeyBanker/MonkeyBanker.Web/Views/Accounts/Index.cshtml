@using MonkeyBanker.Entities
@using MonkeyBanker.Web.Models
@model CrudIndexViewModel<Account>

@{
    ViewBag.Title = "Accounts";
}

<h2>Accounts</h2>

<div>
    @Html.ActionLink("Create new", "Create")
</div>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(m => m.Entitites.First().ID)</th>
            <th>Holder</th>
            <th>@Html.DisplayNameFor(m => m.Entitites.First().Balance)</th>
            <th>@Html.DisplayNameFor(m => m.Entitites.First().Bonuses)</th>
            <th>@Html.DisplayNameFor(m => m.Entitites.First().Type)</th>
            <th>@Html.DisplayNameFor(m => m.Entitites.First().IsActive)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (Account acc in Model.Entitites)
        {
            <tr id="Account_@acc.ID">
                <td>@Html.DisplayFor(m => acc.ID)</td>
                <td>
                    @Html.DisplayFor(m => acc.Holder.GivenName)
                    @Html.DisplayFor(m => acc.Holder.FamilyName)
                </td>
                <td>@Html.DisplayFor(m => acc.Balance)</td>
                <td>@Html.DisplayFor(m => acc.Bonuses)</td>
                <td>@Html.DisplayFor(m => acc.Type)</td>
                <td>
                    @if (acc.IsActive)
                    {
                        <text>True</text>
                    }
                    else
                    {
                        <text>False</text>
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { ID = acc.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { ID = acc.ID }) |
                    <!--Deposit button-->
                    <span class="btn btn-link btn-baseline" data-toggle="modal" data-target="#DWModal">
                        <span onclick="deposit(this)">
                            <!--This sends the ID to js handler-->
                            <span style="display: none;">@acc.ID</span>
                            <!--This sends the action type "Deposit" to js handler-->
                            <span style="display: none">D</span>
                            Deposit
                        </span>
                    </span>|
                    <!--Withdraw button-->
                    <span class="btn btn-link btn-baseline" data-toggle="modal" data-target="#DWModal">
                        <span onclick="deposit(this)">
                            <!--This sends the ID to js handler-->
                            <span style="display: none;">@acc.ID</span>
                            <!--This sends the action type "Withdraw" to js handler-->
                            <span style="display: none">W</span>
                            Withdraw
                        </span>
                    </span>
                </td>
            </tr>
        }
    </tbody>
</table>
<!-- Deposit/Withdrawal modal -->
<div class="modal fade" id="DWModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Ajax.BeginForm(
                "Deposit", "Transactions",
                new AjaxOptions()
                {
                    UpdateTargetId = "Deposit_Status",
                    OnBegin = "Deposit_OnBegin",
                    OnSuccess = "Deposit_OnSuccess"
                }))
            {
            <div class="modal-header">
                <span id="Deposit_Action_Header"></span>
                <span id="Deposit_Target_Name"></span>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <input type="hidden" name="id" value="0" id="DepositID" />
                    <input type="hidden" name="act" value="D" id="DepositAct" />
                    <div class="col-sm-1">
                        <label for="Deposit_Sum" class="col-form-label">Sum:</label>
                    </div>
                    <div class="col-sm-11">
                        <input id="Deposit_Sum" name="sum" class="form-control" type="text" value="" />
                    </div>
                </div>
                <p id="Deposit_Status" style="visibility: hidden">Loading...</p>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary" id="Deposit_SubmitButton">Save</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
            }
        </div>
    </div>
</div>
@section Scripts{
    <script>
        // This function initiates the window state
        function deposit(sender) {
            // Retrive the target Account's ID
            var targetAccountId = sender.children[0].innerText;

            // Resolve the action (deposit or withdrawal)
            var depositAction = sender.children[1].innerText;

            // Inject the ID in the ajax form's id
            $("#DepositID").val(targetAccountId);

            // Inject the deposit action in the ajax form's act
            $("#DepositAct").val(depositAction);

            // Set the action header
            if (depositAction == "D") {
                $("#Deposit_Action_Header").text("Deposit money to");
            }
            else {
                $("#Deposit_Action_Header").text("Withdraw money from");
            }

            // Set the full name of the target account
            $("#Deposit_Target_Name").text(
                $("#Account_" + targetAccountId).children()[1].innerText);
        }

        // This function is called when the user dismisses the Deposit window
        function dismiss() {
            // Reset form fields to their defaults
            $("#Deposit_Sum").val("");
            $("#DepositID").val("0");
            $("#DepositAct").val("D");

            // Reset the window's make up
            $("#Deposit_Action_Header").empty();
            $("#Deposit_Target_Name").empty();

            // Reset the state of the status text
            $("#Deposit_Status").css("visibility", "hidden");
            $("#Deposit_Status").text("Loading...");

            // Enable "Save" button
            $("#Deposit_SubmitButton").removeAttr("disabled");
        }

        // Register dismiss function
        $("#DWModal").on("hide.bs.modal", dismiss);

        // This function is called when the user clicks "Save" button and initiates an ajax request
        function Deposit_OnBegin() {
            // Show a hidden "Loading..." element
            $("#Deposit_Status").css("visibility", "visible");
            $("#Deposit_Status").text("Loading...");

            // Disable "Save" button
            $("#Deposit_SubmitButton").attr("disabled", "disabled");
        }

        // This function is called when the browser successfuly gets ajax response
        function Deposit_OnSuccess() {
            // If an account has been successfuly updated, we need to update its row in the table
            if ($("#Deposit_Success").text() == "true") {
                // Retrive information about which account has been updated
                var updatedAccountIdString = "#Account_" + $("#New_Account_ID").text();

                // Update its balance
                $(updatedAccountIdString).children()[2].innerText = $("#New_Account_Balance").text();

                // Update its bonuses
                $(updatedAccountIdString).children()[3].innerText = $("#New_Account_Bonuses").text();
            }

            // After we have updated the row, we should clean auxiliary elements returned by the ajax request,
            // just in case
            $("#Deposit_Success").remove();
            $("#New_Account").remove();

            // And activate the "Save" button
            $("#Deposit_SubmitButton").removeAttr("disabled");
        }
    </script>
}